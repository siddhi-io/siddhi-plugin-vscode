name: 'Create PR and sent notification'
inputs:
  version:
    description: 'Publish version'
    required: true 
  chatAPI:
    description: 'Google chat API'
    required: true
  bot_username:
    description: 'Ballerina bot username'
    required: true
  bot_email:
    description: 'Ballerina bot email'
    required: true
  bot_token:
    description: 'Ballerina bot token'
    required: true
  wso2-platform:
    description: 'Is WSO2 Platform'
    type: boolean
    default: false
  choreo:
    description: 'Is Choreo'
    type: boolean
    default: false
  ref_name:
    description: 'Branch name'
    required: true  
  ballerina:
    description: 'Is Ballerina'    
    type: boolean
    default: false
    required: true  
  bi:
    description: 'Is BI'    
    type: boolean
    default: false    
  apk:
    description: 'Is APK'
    type: boolean
    default: false
  mi:
    description: 'Is MI'    
    type: boolean
    default: false 
  commonLibs:
    description: 'Is Common Lib'    
    type: boolean
    default: false    
    required: true
  
runs:
  using: "composite"
  steps:
      - name: Config git
        shell: bash
        run: |
          git config --global user.name ${{ inputs.bot_username }}
          git config --global user.email ${{ inputs.bot_email }}

      - name: Add Ballerina git changes
        if: ${{ inputs.ballerina == 'true' }}
        shell: bash
        run: git add workspaces/ballerina/*/*.json

      - name: Add BI git changes
        if: ${{ inputs.bi == 'true' }}
        shell: bash
        run: git add workspaces/bi/*/*.json

      - name: Add WSO2 Platform git changes
        if: ${{ inputs.wso2-platform == 'true' }}
        shell: bash
        run: git add workspaces/wso2-platform/*/*.json

      - name: Add Choreo git changes
        if: ${{ inputs.choreo == 'true' }}
        shell: bash
        run: git add workspaces/choreo/*/*.json

      - name: Add APK git changes
        if: ${{ inputs.apk == 'true' }}
        shell: bash
        run: git add workspaces/apk/*/*.json

      - name: Add common lib git changes
        if: ${{ inputs.commonLibs == 'true' }}
        shell: bash
        run: git add workspaces/common-libs/*/*.json
        
      - name: Add MI git changes
        if: ${{ inputs.mi == 'true' }}
        shell: bash
        run: git add workspaces/mi/*/*.json

      - name: Commit version
        shell: bash
        id: commit
        run: |
          git diff --staged --quiet || git commit -m "Update version to ${{ inputs.version }}"
          git checkout -b "${{ inputs.version }}"
          git remote set-url origin https://${{ inputs.bot_username }}:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
          git tag ${{ inputs.version }}
          git push origin "refs/heads/${{ inputs.version }}" "refs/tags/${{ inputs.version }}"
          baseBranch=""
          if [ "${{ inputs.ballerina }}" == 'true' ]; then
            baseBranch="release-ballerina"
          elif [ "${{ inputs.bi }}" == 'true' ]; then
            baseBranch="release-bi"
          elif [ "${{ inputs.wso2-platform }}" == 'true' ]; then
            baseBranch="release-platform"
          elif [ "${{ inputs.choreo }}" == 'true' ]; then
            baseBranch="release-choreo"
          elif [ "${{ inputs.apk }}" == 'true' ]; then
            baseBranch="release-apk"
          elif [ "${{ inputs.mi }}" == 'true' ]; then
            baseBranch="release-mi"
          fi
          pr=$(gh pr create -B "$baseBranch" -H "${{ inputs.version }}" --title "Merge \"${{ inputs.version }}\" into \"$baseBranch\"" --body '$subject')
          echo "prURL=$pr" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ inputs.bot_token }}

      - name: "PR Notification"
        shell: bash
        run: |
          body=$(cat << EOF
          {
            "cards": [
              { 
                "header": {
                    "title": "New Release PR"
                },
                "sections": [
                  {
                    "widgets": [
                      {
                        "keyValue": {
                          "topLabel": "Pull Request",
                          "content": "${{ steps.commit.outputs.prURL }}",
                          "button": {
                            "textButton": {
                              "text": "Merge",
                              "onClick": {
                                "openLink": {
                                  "url": "${{ steps.commit.outputs.prURL }}"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF
          )
          curl \
            -X POST \
            -H 'Content-Type: application/json' \
            "${{ inputs.chatAPI }}" \
            -d "$body"
