name: Publish VSIX to VSCode Marketplace and OpenVSX

on:
  workflow_dispatch:
    inputs:
      extension:
        type: choice
        description: 'Select the extension'
        required: true
        default: 'ballerina'
        options:
          - 'ballerina'
          - 'ballerina-integrator'
          - 'choreo'
          - 'wso2-platform'
          - 'apk'
          - 'micro-integrator'
      isPreRelease:
        required: true
        type: boolean 
        default: false
      vscode:
        description: Publish to VSCode marketplace
        type: boolean
        required: true
        default: false
      openVSX:
        description: Publish to OpenVSX marketplace
        type: boolean
        required: true
        default: false
      notify:
        description: Notify release on VSCode chat
        type: boolean
        required: true
        default: false        
      workflowRunId:
        required: true

jobs:
  publish:
    name: Publish vsix to marketplaces
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.inputs.workflowRunId }}
          name: VSIX

      - name: Unzip
        run: |
          unzip VSIX.zip
          rm VSIX.zip

      - name: Use Node.js 20.x
        uses: actions/setup-node@v1
        with:
          node-version: 20.x

      - run: | 
          npm install -g vsce
          npm install -g ovsx

      - name: Get version
        id: vsix
        run: | 
          file=$(ls ${{ github.event.inputs.extension }}-[0-9]*.[0-9]*.[0-9]*.vsix)
          fileName=${file##*-}
          version=${fileName%.*}
          extension=${{ github.event.inputs.extension }}
          extensionName="$(echo "$extension" | sed 's/.*/\u&/')"
          echo "vsixName=$file" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "extensionName=$extensionName" >> $GITHUB_OUTPUT
          if [ "${{ github.event.inputs.isPreRelease }}" == "true" ]; then
            echo "releaseMode=--pre-release" >> $GITHUB_OUTPUT
          else
            echo "releaseMode= " >> $GITHUB_OUTPUT
          fi  

      - name: Get Repo
        id: repo
        run: |
          if [ "${{ github.event.inputs.extension }}" == "ballerina" ]; then
            echo "repo=wso2/ballerina-vscode" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.extension }}" == "ballerina-integrator" ]; then
            echo "repo=wso2/ballerina-vscode" >> $GITHUB_OUTPUT  
          elif [ "${{ github.event.inputs.extension }}" == "choreo" ]; then
            echo "repo=wso2/choreo-vscode" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.extension }}" == "wso2-platform" ]; then
            echo "repo=wso2/wso2-platform-vscode" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.extension }}" == "apk" ]; then
            echo "repo=wso2/apk-vscode" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.extension }}" == "micro-integrator" ]; then
            echo "repo=wso2/mi-vscode" >> $GITHUB_OUTPUT
          fi

      - name: Publish to VSCode marketplace
        if: ${{ github.event.inputs.vscode == 'true' }}
        run: vsce publish -p ${{ secrets.VSCE_TOKEN }} --packagePath ${{ steps.vsix.outputs.vsixName }} ${{ steps.vsix.outputs.releaseMode }}

      - name: Publish to OpenVSX marketplace
        if: ${{ github.event.inputs.openVSX == 'true' && github.event.inputs.isPreRelease == 'false' }}
        run: ovsx publish -p ${{ secrets.OPENVSX_TOKEN }} --packagePath ${{ steps.vsix.outputs.vsixName }} ${{ steps.vsix.outputs.releaseMode }}

      - name: Create a release in wso2/${{ steps.repo.outputs.repo }} repo
        if: ${{ steps.repo.outputs.repo != '' }}
        run: |
          id=`curl -X GET  -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization:token ${{ secrets.CHOREO_BOT_TOKEN }}" \
          https://api.github.com/repos/wso2/${{ steps.repo.outputs.repo }}/releases/tags/v${{ steps.vsix.outputs.version }} \
           | jq -r .id` && \
           updateResponse=`curl -X PATCH -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization:token ${{ secrets.CHOREO_BOT_TOKEN }}" \
            -d '{"draft":false,"prerelease":false}' \
            https://api.github.com/repos/wso2/${{ steps.repo.outputs.repo }}/releases/$id`         

      - name: Set Chat API
        id: chat
        run: |
          if [ "${{ inputs.extension }}" == "micro-integrator" ]; then
            echo "chatAPI=${{ secrets.MI_TEAM_CHAT_API }}" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.extension }}" == "ballerina" ] || [ "${{ inputs.extension }}" == "ballerina-integrator" ]; then
            echo "chatAPI=${{ secrets.BI_TEAM_CHAT_API }}" >> $GITHUB_OUTPUT
          else
            echo "chatAPI=${{ secrets.TOOLING_TEAM_CHAT_API }}" >> $GITHUB_OUTPUT
          fi

      - name: "Release Notification"
        if: ${{ github.event.inputs.notify == 'true' }}
        run: |
          body=$(cat << EOF
          {
            "cards": [
              {
                "header": {
                    "title": "Marketplace Release",
                    "subtitle": "${{ steps.vsix.outputs.extensionName }} Extension"
                },
                "sections": [
                  {
                    "widgets": [
                      {
                        "keyValue": {
                          "topLabel": "VSCode Marketplace",
                          "content": "v${{ steps.vsix.outputs.version }}",
                          "iconUrl": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Visual_Studio_Code_1.35_icon.svg/512px-Visual_Studio_Code_1.35_icon.svg.png",
                          "button": {
                            "textButton": {
                              "text": "View",
                              "onClick": {
                                "openLink": {
                                  "url": "https://marketplace.visualstudio.com/items?itemName=WSO2.${{ github.event.inputs.extension }}"
                                }
                              }
                            }
                          }
                        }  
                      },
                      {
                        "keyValue": {
                          "topLabel": "OpenVSX Marketplace",
                          "content": "v${{ steps.vsix.outputs.version }}",
                          "iconUrl": "https://projects.eclipse.org/sites/default/files/open-vsx-logo-withouttext.png",
                          "button": {
                            "textButton": {
                              "text": "View",
                              "onClick": {
                                "openLink": {
                                  "url": "https://open-vsx.org/extension/wso2/${{ github.event.inputs.extension }}"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF
          )
          curl \
            -X POST \
            -H 'Content-Type: application/json' \
            "${{ steps.chat.outputs.chatAPI }}" \
            -d "$body"
