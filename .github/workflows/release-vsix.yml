name: Release SI Extension VSIX

on:
  workflow_dispatch:
    inputs:
      isPreRelease:
        required: true
        type: boolean 
        description: 'Is pre release?'
        default: false
      version:
        type: choice
        description: 'Enter the version type'
        required: true
        default: 'patch'
        options:
          - 'patch'
          - 'minor'
          - 'major'
          - 'N/A'

jobs:
  Build:
    name: Build SI Extension - ${{ github.ref_name }}
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      isPreRelease: ${{ inputs.isPreRelease }}
      enableCache: false
      version: ${{ inputs.version }}
      isReleaseBuild: true

  Release:
    name: Release SI Extension VSIX
    needs: Build
    timeout-minutes: 45
    runs-on: ubuntu-latest
    steps:
      - name: Restore build
        uses: actions/download-artifact@v4
        with:
          name: ExtBuild
          path: ./

      - name: Set up workspace
        run: |
          unzip build.zip
          rm build.zip

      - name: Setup Rush
        uses: gigara/setup-rush@v1.2.0
        with:
          pnpm: 10.10.0
          node: 22.x
          cache-rush: false
          cache-pnpm: false
          set-env: false
          rush-install: true

      - name: Get version
        id: vsix
        run: |
          file=$(ls streaming-integrator-[0-9]*.[0-9]*.[0-9]*.vsix)
          version=$(basename "$file" .vsix)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "vsixFile=$file" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ./.github/actions/release
        with:
          repo: ${{ github.repository }}
          name: streaming-integrator
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR and notify
        uses: ./.github/actions/pr
        with:
          version: ${{ steps.vsix.outputs.version }}
          threadId: ${{ github.run_id }}
          bot_username: ${{ secrets.CHOREO_BOT_USERNAME }}
          bot_email: ${{ secrets.CHOREO_BOT_EMAIL }}
          bot_token: ${{ secrets.CHOREO_BOT_TOKEN }}
          ref_name: ${{ github.ref_name }}
